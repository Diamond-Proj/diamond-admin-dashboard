networks:
  diamond-frontend-network:

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./api:/app/api
    networks:
      - diamond-frontend-network
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`diamond.localhost`) && PathPrefix(`/api`)'
      - 'traefik.http.services.api.loadbalancer.server.port=5328'

  client:
    build:
      context: .
      dockerfile: prod.Dockerfile
    env_file:
      - .env
    # volumes:
    #   - ./:/app
    #   - /app/node_modules/
    #   - /app/.next/
    networks:
      - diamond-frontend-network
    depends_on:
      - api
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.client.rule=Host(`diamond.localhost`) && PathPrefix(`/`)'
      - 'traefik.http.services.client.loadbalancer.server.port=3000'

  traefik:
    image: traefik:v3.1
    command:
      - --log.level=INFO
      - --api
      # Entrypoints
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # Enabling docker providers
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.watch=true
      # TLS Configuration
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.certificates.certFile=/certs/diamond.ncsa.illinois.edu.crt
      - --entrypoints.websecure.http.tls.certificates.keyFile=/certs/diamond.ncsa.illinois.edu.key
    restart: unless-stopped
    ports:
      - '${TRAEFIK_HTTP_PORT:-8000}:80'
      - '${TRAEFIK_HTTPS_PORT:-8443}:443'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Mount the Docker daemon socket
      - ./certs:/certs # Mount the certs directory
    networks:
      - diamond-frontend-network
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.traefik.rule=Host(`traefik.localhost`)' # Dashboard
      - 'traefik.http.routers.traefik.entrypoints=web'
      - 'traefik.http.routers.traefik.service=api@internal'
      #- "traefik.http.routers.traefik.tls=true"
      # - "traefik.http.routers.traefik.middlewares=traefik-ipallowlist"
      # - "traefik.http.middlewares.traefik-ipallowlist.ipallowlist.sourcerange=${TRAEFIK_IPFILTER:-172.16.0.0/12}"
      - 'traefik.http.services.traefik.loadbalancer.server.port=8080'
      # - "traefik.docker.network=diamond-frontend-network"
