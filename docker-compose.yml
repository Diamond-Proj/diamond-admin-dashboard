networks:
  diamond-frontend-network:

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./api:/app/api
    networks:
      - diamond-frontend-network
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`diamond.ncsa.illinois.edu`) && PathPrefix(`/api`)'
      - 'traefik.http.routers.api.entrypoints=websecure'
      - 'traefik.http.services.api.loadbalancer.server.port=5328'

  client:
    build:
      context: .
      dockerfile: prod.Dockerfile
    env_file:
      - .env
    networks:
      - diamond-frontend-network
    depends_on:
      - api
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.client.rule=Host(`diamond.ncsa.illinois.edu`) && PathPrefix(`/`)'
      - 'traefik.http.routers.client.entrypoints=websecure'
      - 'traefik.http.services.client.loadbalancer.server.port=3000'

  traefik:
    image: traefik:v3.1
    command:
      - --log.level=DEBUG
      - --api
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.watch=true
      - --providers.file.directory=/config
      - --providers.file.watch=true
    ports:
      - '${TRAEFIK_HTTP_PORT:-8000}:80'
      - '${TRAEFIK_HTTPS_PORT:-8443}:443'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./certs/:/certs
      - ./traefik.yml:/config/traefik.yml
    networks:
      - diamond-frontend-network
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.traefik.rule=Host(`traefik.ncsa.illinois.edu`)'
      - 'traefik.http.routers.traefik.entrypoints=websecure'
      - 'traefik.http.routers.traefik.service=api@internal'
      - 'traefik.http.routers.traefik.tls=true'
      - 'traefik.http.routers.traefik.tls.domains[0].main=diamond.ncsa.illinois.edu'
